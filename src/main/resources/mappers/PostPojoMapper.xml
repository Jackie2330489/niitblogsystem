<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niitblogsystem.dao.PostPojoMapper" >
  <resultMap id="BaseResultMap" type="com.niitblogsystem.pojo.PostPojo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="body" property="body" jdbcType="VARCHAR" />
    <result column="cretime" property="cretime" jdbcType="TIMESTAMP" />
    <result column="updtime" property="updtime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="readtimes" property="readtimes" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, author, title, body, cretime, updtime, status, readtimes
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from bspost
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from bspost
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.niitblogsystem.pojo.PostPojo" >
    insert into bspost (id, author, title, 
      body, cretime, updtime, 
      status, readtimes)
    values (#{id,jdbcType=BIGINT}, #{author,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{body,jdbcType=VARCHAR}, now(), now(),
      #{status,jdbcType=INTEGER}, #{readtimes,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.niitblogsystem.pojo.PostPojo" >
    insert into bspost
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="body != null" >
        body,
      </if>
      <if test="cretime != null" >
        cretime,
      </if>
      <if test="updtime != null" >
        updtime,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="readtimes != null" >
        readtimes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="body != null" >
        #{body,jdbcType=VARCHAR},
      </if>
      <if test="cretime != null" >
        now(),
      </if>
      <if test="updtime != null" >
        now(),
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="readtimes != null" >
        #{readtimes,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.niitblogsystem.pojo.PostPojo" >
    update bspost
    <set >
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="body != null" >
        body = #{body,jdbcType=VARCHAR},
      </if>
      <if test="cretime != null" >
        cretime = #{cretime,jdbcType=TIMESTAMP},
      </if>
      <if test="updtime != null" >
        updtime = now(),
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="readtimes != null" >
        readtimes = #{readtimes,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.niitblogsystem.pojo.PostPojo" >
    update bspost
    set author = #{author,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      body = #{body,jdbcType=VARCHAR},
      cretime = #{cretime,jdbcType=TIMESTAMP},
      updtime = now(),
      status = #{status,jdbcType=INTEGER},
      readtimes = #{readtimes,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>